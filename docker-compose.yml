version: '3.4'

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672

  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_PASSWORD: 'postgrespw'
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data

  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongodbpw
    ports:
      - 27017:27017
    volumes:
      - /var/lib/mongo/data

  auctions.api:
    container_name: auctions.api
    image: kino2001/auctions.api:latest
    build:
      context: .
      dockerfile: src/Auctions.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - ASPNETCORE_URLS=http://+:7777
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgrespw; Database=AuctionsDbLocal
      - RabbitMq__Host=rabbitmq
      - AuctionsIdpUrl=http://auctions.idp
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 7001:80
      - 7777:7777
    depends_on:
      - rabbitmq
      - postgres

  search.api:
    container_name: search.api
    image: kino2001/search.api:latest
    build:
      context: .
      dockerfile: src/Search.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - RabbitMq__Host=rabbitmq
      - MongoDbSettings__ConnectionString=mongodb://root:mongodbpw@mongodb:27017
      - MongoDbSettings__DatabaseName=AuctionsSearch
    ports:
      - 7002:80
    depends_on:
      - rabbitmq
      - mongodb

  auctions.idp:
    container_name: auctions.idp
    image: kino2001/auctions.idp:latest
    build:
      context: .
      dockerfile: src/Auctions.Idp/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ConnectionStrings__DefaultConnection=Server=postgres:5432; User Id=postgres; Password=postgrespw; Database=AuctionsIdpDbLocal
    ports:
      - 5000:80
    depends_on:
      - postgres

  auctions.gateway:
    container_name: auctions.gateway
    image: kino2001/auctions.gateway:latest
    build:
      context: .
      dockerfile: src/Auctions.Gateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
    ports:
      - 6001:80
    depends_on:
      - auctions.api
      - search.api
      - auctions.idp

  bids.api:
    container_name: bids.api
    image: kino2001/bids.api:latest
    build:
      context: .
      dockerfile: src/Bids.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
      - ConnectionStrings__DefaultConnection=mongodb://root:mongodbpw@mongodb:27017
      - ConnectionStrings__DatabaseName=AuctionsBids
      - AuctionsIdpUrl=http://auctions.idp
      - GrpcAuction=http://auctions-api:7777
    ports:
      - 7003:80
    depends_on:
      - mongodb
      - rabbitmq
      - auctions.api

  notify.api:
    container_name: notify.api
    image: kino2001/notify.api:latest
    build:
      context: .
      dockerfile: src/Notifications.Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:80
      - RabbitMq__Host=rabbitmq
    ports:
      - 7004:80
    depends_on:
      - rabbitmq